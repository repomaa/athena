{"repository_name":"github.com/athena-framework/athena","body":"# Athena\n\n[![Build Status](https://img.shields.io/github/workflow/status/athena-framework/athena/CI)](https://github.com/athena-framework/athena/actions)\n[![Latest release](https://img.shields.io/github/release/athena-framework/athena.svg?style=flat-square)](https://github.com/athena-framework/athena/releases)\n\nA web framework comprised of reusable, independent components.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  athena:\n    github: athena-framework/athena\n```\n\n2. Run `shards install`\n\n## Documentation\n\nEverything is documented in the [API Docs](https://athena-framework.github.io/athena/Athena/Routing.html).\n\n## Contributing\n\n1. Fork it (https://github.com/athena-framework/athena/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Blacksmoke16](https://github.com/blacksmoke16) - creator and maintainer\n","program":{"html_id":"github.com/athena-framework/athena/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/athena-framework/athena","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/ACF","path":"ACF.html","kind":"alias","full_name":"ACF","name":"ACF","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/athena-config.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Config","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Config` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Config.html\">Athena::Config</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/ADI","path":"ADI.html","kind":"alias","full_name":"ADI","name":"ADI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-di/src/athena-di.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"Athena::DI","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::DI` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/DI.html\">Athena::DI</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/AED","path":"AED.html","kind":"alias","full_name":"AED","name":"AED","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"Athena::EventDispatcher","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::EventDispatcher` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/ART","path":"ART.html","kind":"alias","full_name":"ART","name":"ART","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"athena.cr","line_number":29,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Routing","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Routing` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Routing.html\">Athena::Routing</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena","path":"Athena.html","kind":"module","full_name":"Athena","name":"Athena","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr"},{"filename":"lib/athena-config/src/athena-config.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ENV_NAME","name":"ENV_NAME","value":"\"ATHENA_ENV\"","doc":"The name of the environment variable used to determine Athena's current environment.","summary":"<p>The name of the environment variable used to determine Athena's current environment.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A web framework comprised of reusable, independent components.\n\nSee [Athena Framework](https://github.com/athena-framework) on Github.","summary":"<p>A web framework comprised of reusable, independent components.</p>","class_methods":[{"id":"environment:String-class-method","html_id":"environment:String-class-method","name":"environment","doc":"Returns the current environment Athena is in based on `ENV_NAME`.  Defaults to `development` if not defined.","summary":"<p>Returns the current environment Athena is in based on <code><a href=\"Athena.html#ENV_NAME\">ENV_NAME</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr#L14","def":{"name":"environment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[ENV_NAME]? || \"development\""}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Config","path":"Athena/Config.html","kind":"module","full_name":"Athena::Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/athena-config.cr","line_number":22,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Config component contains common types for configuring a component.\n\nCurrently the two primary types are `ACF::Base`, and `ACF::ConfigurationResolver`. `ACF::Base` represents the structure of Athena's YAML configuration file.\n`ACF::ConfigurationResolver` allows resolving the configuration for a given component within a service.  See each specific type for more detailed information.","summary":"<p>Athena's Config component contains common types for configuring a component.</p>","class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":"Returns the `ACF::Base` object instantiated from the configuration file located at `.config_path`.\n\nThe contents of the configuration file are included into the binary at compile time so that the file itself\ndoes not need to be present for the binary to run.  The configuration string is not processed until `.config` is called for the first time\nso that in the future it will respect ENV vars for the environment the binary is in.\n\nTODO: Handle resolving ENV vars and DI parameters within the configuration file.","summary":"<p>Returns the <code><a href=\"../Athena/Config/Base.html\">ACF::Base</a></code> object instantiated from the configuration file located at <code><a href=\"../Athena/Config.html#config_path:String-class-method\">.config_path</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr#L38","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@config).nil?\n  @@config = (ACF.load)\nelse\n  value\nend"}},{"id":"config_path:String-class-method","html_id":"config_path:String-class-method","name":"config_path","doc":"Returns the current path that the configuration file is located at.\n\nFalls back on `DEFAULT_CONFIG_PATH` if a `ATHENA_CONFIG_PATH` ENV variable is not defined.","summary":"<p>Returns the current path that the configuration file is located at.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr#L43","def":{"name":"config_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[CONFIG_PATH_NAME]? || DEFAULT_CONFIG_PATH"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Config/Base","path":"Athena/Config/Base.html","kind":"struct","full_name":"Athena::Config::Base","name":"Base","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/base.cr","line_number":30,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/base.cr"},{"filename":"config/routing_config.cr","line_number":15,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/routing_config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Base config type that wraps the `Athena` configuration file.\n\nComponents may add their own `ACF::Configuration` types to `self` to allow configuring that specific component.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen the base type to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n```\n\n`ACF::Base`'s YAML representation now looks like:\n```yaml\n---\nsome_config:\n  api_key: API_KEY\n```","summary":"<p>Base config type that wraps the <code><a href=\"../../Athena.html\">Athena</a></code> configuration file.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/base.cr#L31","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"routing:Athena::Routing::Config-instance-method","html_id":"routing:Athena::Routing::Config-instance-method","name":"routing","doc":"All configuration related to the `ART` component.","summary":"<p>All configuration related to the <code><a href=\"../../ART.html\">ART</a></code> component.</p>","abstract":false,"args":[],"args_string":" : Athena::Routing::Config","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/routing_config.cr#L17","def":{"name":"routing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::Config","visibility":"Public","body":"@routing"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","path":"Athena/Config/Configuration.html","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/athena-config.cr","line_number":59,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/athena-config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Config/Base","kind":"struct","full_name":"Athena::Config::Base","name":"Base"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Config/CORS","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Helper mixin that includes the modules and defines the methods required a configuration.\n\nIncludes `YAML::Serializable` for handling deserializing the configuration file into a `ACF::Base` and `YAML::Serializable::Strict` to prevent unused/undefined configurations within the file.\n\nSee `ACF::Base` for more information on defining custom configuration types.","summary":"<p>Helper mixin that includes the modules and defines the methods required a configuration.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolver","path":"Athena/Config/ConfigurationResolver.html","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/configuration_resolver.cr","line_number":50,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr"},{"filename":"config/cors_config.cr","line_number":46,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr"},{"filename":"ext/configuration_resolver.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/ext/configuration_resolver.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"},{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"See `Athena::Config::ConfigurationResolverInterface`.","summary":"<p>See <code><a href=\"../../Athena/Config/ConfigurationResolverInterface.html\">Athena::Config::ConfigurationResolverInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr#L50","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","html_id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","name":"resolve","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"args_string":"(_type : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">CORS</span>.<span class=\"k\">class</span>) : ART::Config::CORS?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L48","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"base.routing.cors"}},{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr#L53","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"Unable to resolve configuration for type '#{_type}'\"))"}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":false,"args":[],"args_string":" : ACF::Base","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr#L58","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":"base"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolverInterface","path":"Athena/Config/ConfigurationResolverInterface.html","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/configuration_resolver.cr","line_number":39,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolver","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"A type that allows resolving a specific configuration object by type.  Can be reopened to be made into a service to allow resolving configurations within other services.\n\nComponent configurations that should be resolvable must reopen `self`\nand add a `#resolve` method with a type restriction thats returns the desired configuration.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen ACF::Base to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n\n# Reopen ConfigurationResolver to add a method that allows resolving the `SomeConfig` object.\n#\n# Attempting to resolve a configuration type that has not been added will result in a `NotImplementedError`.\nstruct Athena::Config::ConfigurationResolver\n  # :inherit:\n  def resolve(_type : SomeConfig.class) : SomeConfig\n    # A private `#base` helper method is defined which returns the `ACF::Base` instance.\n    base.some_config\n  end\nend\n\n# Assuming the YAML configuration file looks like:\n# ---\n# some_config:\n#  api_key: API_KEY\nACF::ConfigurationResolver.new.resolve(SomeConfig).api_key # => API_KEY\n```","summary":"<p>A type that allows resolving a specific configuration object by type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":true,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr#L46","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":true,"args":[],"args_string":" : ACF::Base","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-config/src/configuration_resolver.cr#L41","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/DI","path":"Athena/DI.html","kind":"module","full_name":"Athena::DI","name":"DI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-di/src/service_container.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr"},{"filename":"lib/athena-di/src/athena-di.cr","line_number":25,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Dependency Injection (DI) component adds a service container layer to your project.  This allows a project to share useful objects, aka services, throughout the project.\nThese objects live in a special struct called the `Athena::DI::ServiceContainer` (SC).  Object instances can be retrieved from the container, or even injected directly into types as a form of constructor DI.\n\nThe SC is lazily initialized on fibers; this allows the SC to be accessed anywhere within the project.  The `Athena::DI.container` method will return the SC for the current fiber.\nSince the SC is defined on fibers, it allows for each fiber to have its own SC.  This can be useful for web frameworks as each request would have its own SC scoped to that request.\nThis however, is up to the each project to implement.\n\n* See `ADI::Register` for documentation on registering services.\n* See `ADI::ServiceContainer` for documentation on working directly with the SC.\n* See `ADI::Injectable` for documentation on auto injecting services into non service types.\n\nNOTE: It is highly recommended to use interfaces as opposed to concrete types when defining the initializers for both services and non-services.\nUsing interfaces allows changing the functionality of a type by just changing what service gets injected into it.\nSee this [blog post](https://dev.to/blacksmoke16/dependency-injection-in-crystal-2d66#plug-and-play) for an example of this.","summary":"<p>Athena's Dependency Injection (DI) component adds a service container layer to your project.</p>","class_methods":[{"id":"container:Athena::DI::ServiceContainer-class-method","html_id":"container:Athena::DI::ServiceContainer-class-method","name":"container","doc":"Returns the `Athena::DI::ServiceContainer` for the current fiber.","summary":"<p>Returns the <code><a href=\"../Athena/DI/ServiceContainer.html\">Athena::DI::ServiceContainer</a></code> for the current fiber.</p>","abstract":false,"args":[],"args_string":" : Athena::DI::ServiceContainer","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr#L124","def":{"name":"container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::DI::ServiceContainer","visibility":"Public","body":"Fiber.current.container"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Injectable","path":"Athena/DI/Injectable.html","kind":"module","full_name":"Athena::DI::Injectable","name":"Injectable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-di/src/athena-di.cr","line_number":183,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/RouteHandler","kind":"struct","full_name":"Athena::Routing::RouteHandler","name":"RouteHandler"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/DI","kind":"module","full_name":"Athena::DI","name":"DI"},"doc":"Adds a new constructor that resolves the required services based on type and name.\n\nCan be included into a `class`/`struct` in order to automatically inject the required services from the container based on the type's initializer.\n\nService lookup is based on the type restriction and name of the initializer arguments.  If there is only a single service\nof the required type, then that service is used.  If there are multiple services of the required type then the name of the argument's name is used.\nAn exception is raised if a service was not able to be resolved.\n\n## Examples\n\n### Default Usage\n\n```\n@[ADI::Register]\nclass Store\n  include ADI::Service\n\n  property uuid : String = \"UUID\"\nend\n\nclass MyNonService\n  include ADI::Injectable\n\n  getter store : Store\n\n  def initialize(@store : Store); end\nend\n\nMyNonService.new.store.uuid # => \"UUID\"\n```\n\n### Non Service Dependencies\n\nNamed arguments take precedence.  This allows dependencies to be supplied explicitly without going through the resolving process; such as for testing.\n```\n@[ADI::Register]\nclass Store\n  include ADI::Service\n\n  property uuid : String = \"UUID\"\nend\n\nclass MyNonService\n  include ADI::Injectable\n\n  getter store : Store\n  getter id : String\n\n  def initialize(@store : Store, @id : String); end\nend\n\nservice = MyNonService.new(id: \"FOO\")\nservice.store.uuid # => \"UUID\"\nservice.id         # => \"FOO\"\n```","summary":"<p>Adds a new constructor that resolves the required services based on type and name.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/DI/Register","path":"Athena/DI/Register.html","kind":"annotation","full_name":"Athena::DI::Register","name":"Register","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-di/src/athena-di.cr","line_number":116,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/DI","kind":"module","full_name":"Athena::DI","name":"DI"},"doc":"Stores metadata associated with a specific service.\n\nThe type of the service affects how it behaves within the container.  When a `struct` service is retrieved or injected into a type, it will be a copy of the one in the SC (passed by value).\nThis means that changes made to it in one type, will _NOT_ be reflected in other types.  A `class` service on the other hand will be a reference to the one in the SC.  This allows it\nto share state between types.\n\n## Fields\n* `name : String`- The name that should be used for the service.  Defaults to the type's name snake cased.\n* `public : Bool` - If the service should be directly accessible from the container.  Defaults to `false`.\n* `tags : Array(String)` - Tags that should be assigned to the service.  Defaults to an empty array.\n\n## Examples\n\n### Without Arguments\nIf the service doesn't have any arguments then the annotation can be applied without any extra options.\n\n```\n@[ADI::Register]\nclass Store\n  include ADI::Service\n\n  property uuid : String? = nil\nend\n```\n\n### Multiple Services of the Same Type\nIf multiple `ADI::Register` annotations are applied onto the same type, multiple services will be registered based on that type.\nThe name of each service must be explicitly set, otherwise only the last annotation would work.\n\n```\n@[ADI::Register(\"GOOGLE\", \"Google\", name: \"google\")]\n@[ADI::Register(\"FACEBOOK\", \"Facebook\", name: \"facebook\")]\nstruct FeedPartner\n  include ADI::Service\n\n  getter id : String\n  getter name : String\n\n  def initialize(@id : String, @name : String); end\nend\n```\n\n### Service Dependencies\nServices can be injected into another service by prefixing a string containing the service's name, prefixed with an `@` symbol.\nThis syntax also works within arrays if you wished to inject a static set of services.\n\n```\n@[ADI::Register]\nclass Store\n  include ADI::Service\n\n  property uuid : String? = nil\nend\n\n@[ADI::Register(\"@store\")]\nstruct SomeService\n  include ADI::Service\n\n  def initialize(@store : Store); end\nend\n```\n\n### Tagged Services\nServices can be injected into another service based on a tag by prefixing the name of the tag with an `!` symbol.\nThis will provide an array of all services that have that tag.  It is advised to use this with a parent type/interface to type the ivar with.\n\nNOTE: The parent type must also include `ADI::Service`.\n\n```\nabstract class SomeParentType\n  include ADI::Service\nend\n\n@[ADI::Register(tags: [\"a_type\"])]\nclass SomeTypeOne < SomeParentType\n  include ADI::Service\nend\n\n@[ADI::Register(tags: [\"a_type\"])]\nclass SomeTypeTwo < SomeParentType\n  include ADI::Service\nend\n\n@[ADI::Register(\"!a_type\")]\nstruct SomeService\n  include ADI::Service\n\n  def initialize(@types : Array(SomeParentType)); end\nend\n```","summary":"<p>Stores metadata associated with a specific service.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","path":"Athena/DI/Service.html","kind":"module","full_name":"Athena::DI::Service","name":"Service","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-di/src/athena-di.cr","line_number":121,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/athena-di.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Config/ConfigurationResolver","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcher","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/CORS","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/Routing","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/RequestStore","kind":"class","full_name":"Athena::Routing::RequestStore","name":"RequestStore"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/DI","kind":"module","full_name":"Athena::DI","name":"DI"},"doc":"Used to designate a type as a service.\n\nSee `ADI::Register` for more details.","summary":"<p>Used to designate a type as a service.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/DI/ServiceContainer","path":"Athena/DI/ServiceContainer.html","kind":"struct","full_name":"Athena::DI::ServiceContainer","name":"ServiceContainer","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-di/src/service_container.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/DI","kind":"module","full_name":"Athena::DI","name":"DI"},"doc":"Where the instantiated services live.\n\nA getter is defined for each service, if it is public.\nOtherwise, services are only available via constructor DI.","summary":"<p>Where the instantiated services live.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes the container.  Auto registering annotated services.","summary":"<p>Initializes the container.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L27","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get(type:Service.class)-instance-method","html_id":"get(type:Service.class)-instance-method","name":"get","doc":"Returns an array of services of the provided *type*.","summary":"<p>Returns an array of services of the provided <em>type</em>.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Service.class"}],"args_string":"(type : <span class=\"t\">Service</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L176","def":{"name":"get","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Service.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_services_by_type(type)"}},{"id":"has?(name:String):Bool-instance-method","html_id":"has?(name:String):Bool-instance-method","name":"has?","doc":"Returns `true` if a service with the provided *name* has been registered.","summary":"<p>Returns <code>true</code> if a service with the provided <em>name</em> has been registered.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L181","def":{"name":"has?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"service_names.includes?(name)"}},{"id":"resolve(type:_,name:String):ADI::Service-instance-method","html_id":"resolve(type:_,name:String):ADI::Service-instance-method","name":"resolve","doc":"Returns the service of the given *type* and *name*.\n\nRaises an exception if a service could not be resolved.","summary":"<p>Returns the service of the given <em>type</em> and <em>name</em>.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(type : _, name : String) : ADI::Service","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L188","def":{"name":"resolve","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ADI::Service","visibility":"Public","body":"services = get_services_by_type(type)\nif services.size == 1\n  return services.first\nend\nif (service = internal_get(name)) && (services.includes?(service))\n  return service\nend\nraise(\"Could not resolve a service with type '#{type}' and name of '#{name}'.\")\n"}},{"id":"tagged(tag:String)-instance-method","html_id":"tagged(tag:String)-instance-method","name":"tagged","doc":"Returns services with the specified *tag*.","summary":"<p>Returns services with the specified <em>tag</em>.</p>","abstract":false,"args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"args_string":"(tag : String)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L204","def":{"name":"tagged","args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(service_names = @tags[tag]?) ? service_names.map do |service_name|\n  (internal_get(service_name)).not_nil!\nend : Array(ADI::Service).new"}},{"id":"tags:Hash(String,Array(String))-instance-method","html_id":"tags:Hash(String,Array(String))-instance-method","name":"tags","doc":"Mapping of tag name to services with that tag.","summary":"<p>Mapping of tag name to services with that tag.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-di/src/service_container.cr#L7","def":{"name":"tags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Array(String))","visibility":"Public","body":"@tags"}}],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","path":"Athena/EventDispatcher.html","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr"},{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":83,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"A [Mediator](https://en.wikipedia.org/wiki/Mediator_pattern) and [Observer](https://en.wikipedia.org/wiki/Observer_pattern)\npattern event library.\n\n`Athena::EventDispatcher` or, `AED` for short, allows defining instance methods on `EventListenerInterface` types (observers) that will be executed\nwhen an `Event` is dispatched via the `EventDispatcher` (mediator).\n\nAll events are registered with an `EventDispatcher` at compile time.  While the recommended usage involves using\nlistener structs, it is also possible to add/remove event handlers dynamically at runtime.  The `EventDispatcher` has two constructors;\none that supports manual or DI initialization, while the other auto registers listeners at compile time via macros.\n\nAn event is nothing more than a `class` that, optionally, contains stateful information about the event.  For example a `HttpOnRequest` event would\ncontain a reference to the `HTTP::Request` object so that the listeners have access to request data.  Similarly, a `HttpOnResponse` event\nwould contain a reference to the `HTTP::Server::Response` object so that the response body/headers/status can be mutated by the listeners.\n\nSince events and listeners are registered at compile time (via macros or DI), listeners can be added to a project seamlessly without updating any configuration, or having\nto instantiate a `HTTP::Handler` object and add it to an array for example.  The main benefit of this is that an external shard that defines a listener could\nbe installed and would inherently be picked up and used by `Athena::EventDispatcher`; thus making an application easily extendable.\n\n### Example\n```\n# Create a custom event.\nclass ExceptionEvent < AED::Event\n  property? handled : Bool = false\n\n  getter exception : Exception\n\n  # Events can contain stateful information related to the event.\n  def initialize(@exception : Exception); end\nend\n\n# Create a listener.\nstruct ExceptionListener\n  include AED::EventListenerInterface\n\n  # Define what events `self` is listening on as well as their priorities.\n  #\n  # The higher the priority the sooner that specific listener is executed.\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ExceptionEvent => 0,\n    }\n  end\n\n  # Listener handler's are `#call` instance methods restricted to the type of event it should handle.\n  #\n  # Multiple methods can be defined to handle multiple events within the same listener.\n  #\n  # Event handler's also have access to the dispatcher instance itself.\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n    event.handled = true\n  end\nend\n\n# New up an `AED::EventDispatcher`, using `AED::EventDispatcher#new`.\n# This overload automatically registers listeners using macros.\n#\n# See also `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))` for a more manual/DI friendly initializer.\ndispatcher = AED::EventDispatcher.new\n\n# Instantiate our custom event.\nevent = ExceptionEvent.new ArgumentError.new(\"Test exception\")\n\n# All events are dispatched via an `AED::EventDispatcher` instance.\n#\n# Similarly, all listeners are registered with it.\ndispatcher.dispatch event\n\nevent.handled # => true\n\n# Additional methods also exist on the dispatcher, such as:\n# * Adding/removing listeners at runtime\n# * Checking the priority of a listener\n# * Getting an array of listeners for a given event\n# * Checking if there is a listener(s) listening on a given `AED::Event`\ndispatcher.has_listeners? ExceptionEvent # => true\n```","summary":"<p>A <a href=\"https://en.wikipedia.org/wiki/Mediator_pattern\" target=\"_blank\">Mediator</a> and <a href=\"https://en.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\">Observer</a> pattern event library.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"create_listener(event,&)-macro","html_id":"create_listener(event,&amp;)-macro","name":"create_listener","doc":"Creates a listener for the provided *event*.  The macro's block is used as the listener.\n\nThe macro *block* implicitly yields `event` and `dispatcher`.\n\n```\nlistener = AED.create_listener(SampleEvent) do\n  # Do something with the event.\n  event.some_method\n\n  # A reference to the `AED::EventDispatcherInterface` is also provided.\n  dispatcher.dispatch FakeEvent.new\nend\n```","summary":"<p>Creates a listener for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"args_string":"(event, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L124","def":{"name":"create_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"    Proc(AED::Event, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n      Proc(\n{{ event.id }}\n, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n        \n{{ yield }}\n\n      \nend.call \nevent.as(\n{{ event }}\n), dispatcher\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","path":"Athena/EventDispatcher/Event.html","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/event.cr","line_number":28,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"}],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base `class` for all event objects.\n\nThis event does not contain any event data and\ncan be used by events that do not require any state.\n\nCan be inherited from to include information about the event.\n\nNOTE: If one event inherits from another, and both are being used within a listener; the child event's handler would be executed twice since its type is compatible with the parent.\nEither use composition versus inheritance for sharing common logic between events, or add an explicit type check in the listener.\n\n```\n# Define a custom event\nclass ExceptionEvent < AED::Event\n  getter exception : Exception\n\n  def initialize(@exception : Exception); end\nend\n\n# Using Event on its own\ndispatcher.dispatch AED::Event.new\n\n# Dispatch a custom event\nexception = ArgumentError.new \"Value cannot be negative\"\ndispatcher.dispatch ExceptionEvent.new exception\n```","summary":"<p>Base <code>class</code> for all event objects.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcher","path":"Athena/EventDispatcher/EventDispatcher.html","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr"},{"filename":"ext/event_dispatcher.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/ext/event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(listeners:Array(AED::EventListenerInterface))-class-method","html_id":"new(listeners:Array(AED::EventListenerInterface))-class-method","name":"new","doc":"Initializes `self` with the provided *listeners*.\n\nThis overload is mainly intended for DI or to manually\nconfigure the listeners that should be listened on.","summary":"<p>Initializes <code>self</code> with the provided <em>listeners</em>.</p>","abstract":false,"args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"args_string":"(listeners : Array(AED::EventListenerInterface))","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L18","def":{"name":"new","args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listeners)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes `self` automatically via macros.  This overload is mainly intended for\nuse cases where the listener types don't have any dependencies, and/or all listeners should listen.","summary":"<p>Initializes <code>self</code> automatically via macros.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L40","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new({{ AED::EventListenerInterface.includers.map do |listener|\n  \"#{listener.id}.new\".id\nend }})"}}],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32 = <span class=\"n\">0</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L45","def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event] << (AED::EventListener.new(listener, priority))\n@sorted.delete(event)\n"}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L51","def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(listeners(event.class)).each do |listener|\n  if event.is_a?(AED::StoppableEvent) && (!event.propagate?)\n    return\n  end\n  listener.call(event, self)\nend"}},{"id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L82","def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if event\n  return !@events[event].empty?\nend\n@events.values.any? do |listener_arr|\n  !listener_arr.empty?\nend\n"}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L75","def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if has_listeners?(event)\nelse\n  return nil\nend\n@events[event].find do |__arg0|\n  __arg0.listener.class == listener\nend.try(&.priority)\n"}},{"id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Array(AED::EventListener)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L60","def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":"if event\n  if @sorted.includes?(event)\n  else\n    sort(event)\n  end\n  return @events[event]\nend\n@events.each do |ev, _listeners|\n  if @sorted.includes?(event)\n  else\n    sort(ev)\n  end\nend\n@events.values.flatten\n"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L89","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject! do |__arg2|\n  __arg2.listener.class == listener\nend"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher.cr#L94","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject!(&.==(listener))"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcherInterface","path":"Athena/EventDispatcher/EventDispatcherInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventDispatcher","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base type of an event dispatcher.  Defines how dispatchers should be implemented.","summary":"<p>Base type of an event dispatcher.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L4","def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L9","def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L21","def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L17","def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Array(AED::EventListener)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L13","def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L24","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L27","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListener","path":"Athena/EventDispatcher/EventListener.html","kind":"struct","full_name":"Athena::EventDispatcher::EventListener","name":"EventListener","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":96,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Wraps an `EventListenerType` in order to keep track of its `priority`.","summary":"<p>Wraps an <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> in order to keep track of its <code><a href=\"../../Athena/EventDispatcher/EventListener.html#priority:Int32-instance-method\">#priority</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(listener:EventListenerType,priority:Int32=0)-class-method","html_id":"new(listener:EventListenerType,priority:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(listener : EventListenerType, priority : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L108","def":{"name":"new","args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listener, priority)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"listener:EventListenerType-instance-method","html_id":"listener:EventListenerType-instance-method","name":"listener","doc":"The wrapped `EventListenerType` instance.","summary":"<p>The wrapped <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : EventListenerType","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L101","def":{"name":"listener","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EventListenerType","visibility":"Public","body":"@listener"}},{"id":"priority:Int32-instance-method","html_id":"priority:Int32-instance-method","name":"priority","doc":"The priority of the `EventListenerType` instance.\n\nThe higher the `priority` the sooner `listener` will be executed.","summary":"<p>The priority of the <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L106","def":{"name":"priority","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@priority"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerInterface","path":"Athena/EventDispatcher/EventListenerInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_listener_interface.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_listener_interface.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/CORS","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/Routing","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Interface for event listeners.\n\nListeners are defined by including this module.\n\nAn event can be listened for by defining `#call(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil`.\nThe first argument should be typed to the specific `AED::Event` instance that the method should listen on.  Multiple methods can be defined to handle\nmultiple events within the same listener.\n\nImplementors must also define `self.subscribed_events : AED::SubscribedEvents` that represents the events that `self`'s methods\nare listening on.  The value of the hash is the priority of the listener.  The higher the value the sooner that listener method gets executed.\n\nImplementors can also define initializers if external dependencies are required for handling the event.  However, `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))`\nmust be used to register `self`, either with DI, or provided manually.\n\n```\nstruct TestListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      HttpRequestEvent => 0,\n      ExceptionEvent   => 4,\n    }\n  end\n\n  def call(event : HttpRequestEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `HttpRequestEvent` and/or dispatcher\n  end\n\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n  end\nend\n```","summary":"<p>Interface for event listeners.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":"Returns the `AED::Event`s that `self` is listening on, along with\nthe listener priority of each event.\n\nImplementors should overide this with the events it should listen on.","summary":"<p>Returns the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code>s that <code>self</code> is listening on, along with the listener priority of each event.</p>","abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_listener_interface.cr#L40","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents.new"}}],"constructors":[],"instance_methods":[{"id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Example method for listening on a specific *event*.  Implementors can define multiple of these,\nassuming each one listens on a different `AED::Event` type.\n\nInternally this method is used to make the compiler happy, in practice it should never get called.","summary":"<p>Example method for listening on a specific <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/event_listener_interface.cr#L48","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerType","path":"Athena/EventDispatcher/EventListenerType.html","kind":"alias","full_name":"Athena::EventDispatcher::EventListenerType","name":"EventListenerType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":88,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"(Athena::EventDispatcher::EventListenerInterface | Proc(Athena::EventDispatcher::Event, Athena::EventDispatcher::EventDispatcherInterface, Nil))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The possible types an event listener can be.  `AED::EventListenerInterface` instances use `#call`\nin order to keep a common interface with the `Proc` based listeners.","summary":"<p>The possible types an event listener can be.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","path":"Athena/EventDispatcher/StoppableEvent.html","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/stoppable_event.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/stoppable_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"An `AED::Event` whose processing may be interrupted when the event has been handled.\n\n`AED::EventDispatcherInterface` implementations *MUST* check to determine if an `AED::Event`\nis marked as stopped after each listener is called.  If it is, then the `AED::EventListenerType` should\nreturn immediately without calling any further `AED::EventListenerType`.","summary":"<p>An <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> whose processing may be interrupted when the event has been handled.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"propagate?:Bool-instance-method","html_id":"propagate?:Bool-instance-method","name":"propagate?","doc":"If future `AED::EventListenerType` should be executed.","summary":"<p>If future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> should be executed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/stoppable_event.cr#L10","def":{"name":"propagate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!@propatation_stopped"}},{"id":"stop_propagation:Nil-instance-method","html_id":"stop_propagation:Nil-instance-method","name":"stop_propagation","doc":"Prevent future `AED::EventListenerType` from executing once\nany listener calls `#stop_propagation` on `self`.","summary":"<p>Prevent future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> from executing once any listener calls <code><a href=\"../../Athena/EventDispatcher/StoppableEvent.html#stop_propagation:Nil-instance-method\">#stop_propagation</a></code> on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/stoppable_event.cr#L16","def":{"name":"stop_propagation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@propatation_stopped = true"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/SubscribedEvents","path":"Athena/EventDispatcher/SubscribedEvents.html","kind":"alias","full_name":"Athena::EventDispatcher::SubscribedEvents","name":"SubscribedEvents","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":93,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":true,"aliased":"Hash(Athena::EventDispatcher::Event.class, Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The mapping of the `AED::Event` and the priority a `AED::EventListenerInterface` is listening on.\n\nSee `AED::EventListenerInterface`.","summary":"<p>The mapping of the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> and the priority a <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> is listening on.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing","path":"Athena/Routing.html","kind":"module","full_name":"Athena::Routing","name":"Routing","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"},{"filename":"athena.cr","line_number":44,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"The Routing component provides an event based framework for converting a request into a response\nand includes various abstractions/useful types to make that process easier.\n\nAthena is an event based framework; meaning it emits `ART::Events` that are acted upon to handle the request.\nAthena also utilizes `Athena::DI` to provide a service container layer.  The service container layer\nallows a project to share/inject useful objects between various types, such as a custom `AED::EventListenerInterface`, `ART::Controller`, or `ART::ParamConverterInterface`.\nSee the corresponding types for more information.\n\n* See `ART::Controller` for documentation on defining controllers/route actions.\n* See `ART::Config` for documentation on configuration options available for the Routing component.\n* See `ART::Events` for documentation on the events that can be listened on during the request's life-cycle.\n* See `ART::ParamConverterInterface` for documentation on using param converters.\n* See `ART::Exceptions` for documentation on exception handling.","summary":"<p>The Routing component provides an event based framework for converting a request into a response and includes various abstractions/useful types to make that process easier.</p>","class_methods":[{"id":"run(port:Int32=3000,host:String=&quot;0.0.0.0&quot;,ssl:OpenSSL::SSL::Context::Server|Bool|Nil=nil,reuse_port:Bool=false)-class-method","html_id":"run(port:Int32=3000,host:String=&amp;quot;0.0.0.0&amp;quot;,ssl:OpenSSL::SSL::Context::Server|Bool|Nil=nil,reuse_port:Bool=false)-class-method","name":"run","doc":"Starts the HTTP server with the given *port*, *host*, *ssl*, *reuse_port*.","summary":"<p>Starts the HTTP server with the given <em>port</em>, <em>host</em>, <em>ssl</em>, <em>reuse_port</em>.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"ssl","doc":null,"default_value":"nil","external_name":"ssl","restriction":"OpenSSL::SSL::Context::Server | Bool | Nil"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"args_string":"(port : Int32 = <span class=\"n\">3000</span>, host : String = <span class=\"s\">&quot;0.0.0.0&quot;</span>, ssl : OpenSSL::SSL::Context::Server | Bool | Nil = <span class=\"n\">nil</span>, reuse_port : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L143","def":{"name":"run","args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"ssl","doc":null,"default_value":"nil","external_name":"ssl","restriction":"OpenSSL::SSL::Context::Server | Bool | Nil"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@server = HTTP::Server.new do |ctx|\n  Fiber.current.container = Athena::DI::ServiceContainer.new\n  ART::RouteHandler.new.handle(ctx)\n  nil\nend\nif @@server.not_nil!.each_address do\n  break true\nend\nelse\n  {% if flag?(:without_openssl) %}\n        @@server.not_nil!.bind_tcp(host, port, reuse_port: reuse_port)\n      {% else %}\n        if ssl\n          @@server.not_nil!.bind_tls(host, port, ssl, reuse_port: reuse_port)\n        else\n          @@server.not_nil!.bind_tcp(host, port, reuse_port: reuse_port)\n        end\n      {% end %}\nend\n@@server.not_nil!.listen\n"}},{"id":"stop:Nil-class-method","html_id":"stop:Nil-class-method","name":"stop","doc":"Stops the server.","summary":"<p>Stops the server.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L134","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if server = @@server\n  if server.closed?\n  else\n    server.close\n  end\nelse\n  raise(\"Server not set\")\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Action","path":"Athena/Routing/Action.html","kind":"class","full_name":"Athena::Routing::Action","name":"Action","abstract":true,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"athena.cr","line_number":80,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Route","kind":"class","full_name":"Athena::Routing::Route(Controller, ActionType, ReturnType, *ArgTypes)","name":"Route"}],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Parent type of a route just used for typing.\n\nSee `ART::Route`.","summary":"<p>Parent type of a route just used for typing.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Config","path":"Athena/Routing/Config.html","kind":"struct","full_name":"Athena::Routing::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"config/routing_config.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/routing_config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Encompasses all configuration related to the `Athena::Routing` component.\n\nFor a higher level introduction to configuring Athena components, see `Athena::Config`.","summary":"<p>Encompasses all configuration related to the <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code> component.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/routing_config.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cors:ART::Config::CORS?-instance-method","html_id":"cors:ART::Config::CORS?-instance-method","name":"cors","doc":"Configuration related to `Athena::Routing::Listeners::CORS`.\n\nDisables the listener if not defined.","summary":"<p>Configuration related to <code><a href=\"../../Athena/Routing/Listeners/CORS.html\">Athena::Routing::Listeners::CORS</a></code>.</p>","abstract":false,"args":[],"args_string":" : ART::Config::CORS?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/routing_config.cr#L12","def":{"name":"cors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"@cors"}}],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Config/CORS","path":"Athena/Routing/Config/CORS.html","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"config/cors_config.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"github.com/athena-framework/athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},"doc":"Configuration options for `ART::Listeners::CORS`.  If `ART::Config.cors` is not defined in your configuration file, the listener is disabled.\n\nTODO: Allow scoping CORS options to specific routes versus applying them to all routes.\n\nAlso see `ART::Config`.","summary":"<p>Configuration options for <code><a href=\"../../../Athena/Routing/Listeners/CORS.html\">ART::Listeners::CORS</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L9","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_credentials:Bool-instance-method","html_id":"allow_credentials:Bool-instance-method","name":"allow_credentials","doc":"Indicates whether the request can be made using credentials.\n\nMaps to the `access-control-allow-credentials` header.","summary":"<p>Indicates whether the request can be made using credentials.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L14","def":{"name":"allow_credentials","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_credentials"}},{"id":"allow_headers:Array(String)-instance-method","html_id":"allow_headers:Array(String)-instance-method","name":"allow_headers","doc":"The header or headers that can be used when making the actual request.\n\nCan be set to `[\"*\"]` to allow any headers.\n\nmaps to the `access-control-allow-headers` header.","summary":"<p>The header or headers that can be used when making the actual request.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L28","def":{"name":"allow_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_headers"}},{"id":"allow_methods:Array(String)-instance-method","html_id":"allow_methods:Array(String)-instance-method","name":"allow_methods","doc":"The method or methods allowed when accessing the resource.\n\nMaps to the `access-control-allow-methods` header.","summary":"<p>The method or methods allowed when accessing the resource.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L33","def":{"name":"allow_methods","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_methods"}},{"id":"allow_origin:Array(String)-instance-method","html_id":"allow_origin:Array(String)-instance-method","name":"allow_origin","doc":"A white-listed array of valid origins.\n\nCan be set to `[\"*\"]` to allow any origin.\n\nTODO: Allow `Regex` based origins.","summary":"<p>A white-listed array of valid origins.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L21","def":{"name":"allow_origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_origin"}},{"id":"expose_headers:Array(String)-instance-method","html_id":"expose_headers:Array(String)-instance-method","name":"expose_headers","doc":"Array of headers that the browser is allowed to read from the response.\n\nMaps to the `access-control-expose-headers` header.","summary":"<p>Array of headers that the browser is allowed to read from the response.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L38","def":{"name":"expose_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@expose_headers"}},{"id":"max_age:Int32-instance-method","html_id":"max_age:Int32-instance-method","name":"max_age","doc":"Number of seconds that the results of a preflight request can be cached.\n\nMaps to the `access-control-max-age` header.","summary":"<p>Number of seconds that the results of a preflight request can be cached.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/config/cors_config.cr#L43","def":{"name":"max_age","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_age"}}],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Controller","path":"Athena/Routing/Controller.html","kind":"class","full_name":"Athena::Routing::Controller","name":"Controller","abstract":true,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"controller.cr","line_number":94,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The core of any framework is routing; how a route is tied to an action.  Athena takes an annotation based approach; an annotation, such as `ART::Get` is applied to an instance method of a controller class,\nwhich will be executed when that endpoint receives a request.  The annotation includes the path as well as any constraints that a parameter must meet in order for the route to be invoked.\n\nAdditional annotations also exist for setting a query param or a parm converter.  See `ART::QueryParam` and `ART::ParamConverter` respectively.\n\nChild controllers must inherit from `ART::Controller` (or an abstract child of it).  Each request gets its own instance of the controller to better allow for DI via `Athena::DI`.\n\nThe return type of an action does _NOT_ have to be `String`.  Currently the response value is serialized by calling `.to_json` on the value.\nIn the future a more flexible/proper view layer will be implemented.\n\n### Example\nThe following controller shows examples of the various routing features of Athena.  `ART::Controller` also defines various macro DSLs, such as `ART::Controller.get` to make defining routes\nseem more Sinatra/Kemal like.  See the documentation on the macros for more details.\n\n```\nrequire \"athena\"\n\n# The `ART::Prefix` annotation can be applied to a controller to define a prefix to use for all routes within `self`.\n@[ART::Prefix(\"athena\")]\nclass TestController < ART::Controller\n  # A GET endpoint with no params returning a `String`.\n  #\n  # Action return type restrictions are required.\n  @[ART::Get(path: \"/me\")]\n  def get_me : String\n    \"Jim\"\n  end\n\n  # A GET endpoint with no params returning `Nil`.\n  # `Nil` return types are returned with a status\n  # of 204 no content\n  @[ART::Get(path: \"/no_content\")]\n  def get_no_content : Nil\n    # Do stuff\n  end\n\n  # A GET endpoint with two `Int32` params returning an `Int32`.\n  #\n  # The parameters of a route _MUST_ match the arguments of the action.\n  # Type restrictions on action arguments are required.\n  @[ART::Get(path: \"/add/:val1/:val2\")]\n  def add(val1 : Int32, val2 : Int32) : Int32\n    val1 + val2\n  end\n\n  # A GET endpoint with an `String` route param, and a required string query param that must match the given pattern; returning a `String`.\n  #\n  # A non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\n  @[ART::QueryParam(\"time\", constraints: /\\d:\\d:\\d/)]\n  @[ART::Get(path: \"/event/:event_name/\")]\n  def event_time(event_name : String, time : String) : String\n    \"#{event_name} occurred at #{time}\"\n  end\n\n  # A GET endpoint with an optional query parameter and optional path param with a default value; returning a `NamedTuple(user_id : Int32?, page : Int32)`.\n  #\n  # A nilable type denotes it as optional.  If the parameter is not supplied (or could not be converted), and no default value is assigned, it is `nil`.\n  @[ART::QueryParam(\"user_id\")]\n  @[ART::Get(path: \"/events/(:page)\")]\n  def events(user_id : Int32?, page : Int32 = 1) : NamedTuple(user_id: Int32?, page: Int32)\n    {user_id: user_id, page: page}\n  end\n\n  # A GET endpoint with param constraints.  The param must match the supplied Regex or it will not match and return a 404 error.\n  @[ART::Get(path: \"/time/:time/\", constraints: {\"time\" => /\\d{2}:\\d{2}:\\d{2}/})]\n  def get_constraint(time : String) : String\n    time\n  end\n\n  # A POST endpoint with a route param and accessing the request body; returning a `Bool`.\n  #\n  # It is recommended to use param converters to pass an actual object representing the data (assuming the body is JSON)\n  # to the route's action; however the raw request body can be accessed by typing an action argument as `HTTP::Request`.\n  @[ART::Post(path: \"/test/:expected\")]\n  def post_body(expected : String, request : HTTP::Request) : Bool\n    expected == request.body.try &.gets_to_end\n  end\nend\n\nART.run\n\nCLIENT = HTTP::Client.new \"localhost\", 3000\n\nCLIENT.get(\"/athena/me\").body                      # => \"Jim\"\nCLIENT.get(\"/athena/add/50/25\").body               # => 75\nCLIENT.get(\"/athena/event/foobar?time=1:1:1\").body # => \"foobar occurred at 1:1:1\"\nCLIENT.get(\"/athena/events\").body                  # => {\"user_id\":null,\"page\":1}\nCLIENT.get(\"/athena/events/17?user_id=19\").body    # => {\"user_id\":19,\"page\":17}\nCLIENT.get(\"/athena/time/12:45:30\").body           # => \"12:45:30\"\nCLIENT.get(\"/athena/time/12:aa:30\").body           # => 404 not found\nCLIENT.get(\"/athena/no_content\").body              # => 204 no content\nCLIENT.post(\"/athena/test/foo\", body: \"foo\").body  # => true\n```","summary":"<p>The core of any framework is routing; how a route is tied to an action.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"delete(path,*args,**named_args,&)-macro","html_id":"delete(path,*args,**named_args,&amp;)-macro","name":"delete","doc":"Helper DSL macro for creating `DELETE` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  delete \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+} do\n    \"Value1: #{value1} - Value2: #{value2}\"\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>DELETE</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr#L95","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Delete(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def delete_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"get(path,*args,**named_args,&)-macro","html_id":"get(path,*args,**named_args,&amp;)-macro","name":"get","doc":"Helper DSL macro for creating `GET` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  get \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+} do\n    \"Value1: #{value1} - Value2: #{value2}\"\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>GET</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr#L95","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Get(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def get_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"patch(path,*args,**named_args,&)-macro","html_id":"patch(path,*args,**named_args,&amp;)-macro","name":"patch","doc":"Helper DSL macro for creating `PATCH` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  patch \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+} do\n    \"Value1: #{value1} - Value2: #{value2}\"\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PATCH</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr#L95","def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Patch(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def patch_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"post(path,*args,**named_args,&)-macro","html_id":"post(path,*args,**named_args,&amp;)-macro","name":"post","doc":"Helper DSL macro for creating `POST` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  post \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+} do\n    \"Value1: #{value1} - Value2: #{value2}\"\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>POST</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr#L95","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Post(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def post_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"put(path,*args,**named_args,&)-macro","html_id":"put(path,*args,**named_args,&amp;)-macro","name":"put","doc":"Helper DSL macro for creating `PUT` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  put \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+} do\n    \"Value1: #{value1} - Value2: #{value2}\"\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PUT</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/controller.cr#L95","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Put(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def put_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}}],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Delete","path":"Athena/Routing/Delete.html","kind":"annotation","full_name":"Athena::Routing::Delete","name":"Delete","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":72,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a DELETE endpoint.\n\n## Fields\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n```\n@[ART::Delete(path: \"/users/:id\")]\ndef delete_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a DELETE endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","path":"Athena/Routing/Events.html","kind":"module","full_name":"Athena::Routing::Events","name":"Events","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"events/context_event.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/context_event.cr"},{"filename":"athena.cr","line_number":54,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::Event` that are emitted via `Athena::EventDispatcher` to handle a request during its life-cycle.\nAthena adds a `HTTP::Request#attributes` getter that returns a `Hash(String, Bool | Int32 | String | Float64 | Nil)` which can be used to store simple information that can be used later.\n\nSee each specific event for more detailed information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> that are emitted via <code><a href=\"../../Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> to handle a request during its life-cycle.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","path":"Athena/Routing/Events/Context.html","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"events/context_event.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/context_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Represents an event that has access to both the request and response objects.","summary":"<p>Represents an event that has access to both the request and response objects.</p>","class_methods":[],"constructors":[{"id":"new(ctx:HTTP::Server::Context)-class-method","html_id":"new(ctx:HTTP::Server::Context)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"HTTP::Server::Context"}],"args_string":"(ctx : HTTP::Server::Context)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/context_event.cr#L9","def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"HTTP::Server::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":"Returns the current request object.","summary":"<p>Returns the current request object.</p>","abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/context_event.cr#L4","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"@request"}},{"id":"response:HTTP::Server::Response-instance-method","html_id":"response:HTTP::Server::Response-instance-method","name":"response","doc":"Returns the current response object.","summary":"<p>Returns the current response object.</p>","abstract":false,"args":[],"args_string":" : HTTP::Server::Response","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/context_event.cr#L7","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Server::Response","visibility":"Public","body":"@response"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Exception","path":"Athena/Routing/Events/Exception.html","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"events/exception_event.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/exception_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted when an exception occurs.  See `ART::Exceptions` for more information on how exception handling works in Athena.\n\nThis event can be listened on to execute some code when an exception occurs; such as for logging/analytics etc.\n\nTODO: Refactor this to be similar to `ART::Events::Request` to support error renderers.","summary":"<p>Emitted when an exception occurs.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,exception:::Exception)-class-method","html_id":"new(request:HTTP::Request,exception:::Exception)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(request : HTTP::Request, exception : ::Exception)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/exception_event.cr#L11","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, exception)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"exception:::Exception-instance-method","html_id":"exception:::Exception-instance-method","name":"exception","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Exception","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/exception_event.cr#L9","def":{"name":"exception","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Exception","visibility":"Public","body":"@exception"}},{"id":"exception=(exception:::Exception)-instance-method","html_id":"exception=(exception:::Exception)-instance-method","name":"exception=","doc":null,"summary":null,"abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : ::Exception)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/exception_event.cr#L9","def":{"name":"exception=","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exception = exception"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Request","path":"Athena/Routing/Events/Request.html","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"events/request_event.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/request_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very early in the request's life-cycle; before the corresponding `ART::Route` (if any) has been resolved.\n\nThis event can be listened on to add information to the request, or return a response before even triggering the router; `ART::Listeners::CORS` is an example of this.","summary":"<p>Emitted very early in the request's life-cycle; before the corresponding <code><a href=\"../../../Athena/Routing/Route.html\">ART::Route</a></code> (if any) has been resolved.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"finish_request:Nil-instance-method","html_id":"finish_request:Nil-instance-method","name":"finish_request","doc":"Marks that `#request` is fulfilled and that `#response` should be returned.\n\nPropagation of `self` will stop once `#finish_request` is called.","summary":"<p>Marks that <code>#request</code> is fulfilled and that <code>#response</code> should be returned.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/request_event.cr#L13","def":{"name":"finish_request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@request_finished = true\nstop_propagation\n"}},{"id":"request_finished?:Bool-instance-method","html_id":"request_finished?:Bool-instance-method","name":"request_finished?","doc":"If `#request` has been fulfilled.","summary":"<p>If <code>#request</code> has been fulfilled.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/request_event.cr#L8","def":{"name":"request_finished?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@request_finished"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Response","path":"Athena/Routing/Events/Response.html","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"events/response_event.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/response_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after the route's action has been executed and response has been written.\n\nThis event can be listened on to modify the response object further before it is returned; such as adding headers/cookies etc.","summary":"<p>Emitted after the route's action has been executed and response has been written.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Terminate","path":"Athena/Routing/Events/Terminate.html","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"events/terminate_event.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/events/terminate_event.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events/Context","kind":"module","full_name":"Athena::Routing::Events::Context","name":"Context"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very late in the request's life-cycle, after the response has been sent.\n\nThis event can be listened on to perform tasks that are not required to finish before the response is sent.","summary":"<p>Emitted very late in the request's life-cycle, after the response has been sent.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","path":"Athena/Routing/Exceptions.html","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"exceptions/http_exception.cr","line_number":14,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr"},{"filename":"athena.cr","line_number":65,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, `ART::Exceptions::HTTPException`.\n\nWhen an exception is raised, Athena will check if the exception is a `ART::Exceptions::HTTPException`.  If it is, then the response is written by calling `.to_json` on the exception;\nusing the status code defined on the exception as well as merging any headers into the response.  In the future a more flexible/proper error renderer layer will be implemented.\nIf the exception is not a `ART::Exceptions::HTTPException`, then a 500 internal server error is returned.\n\nTo provide the best response to the client, non `ART::Exceptions::HTTPException` should be caught and converted to a corresponding `ART::Exceptions::HTTPException`.\nCustom HTTP errors can also be defined by inheriting from `ART::Exceptions::HTTPException`.  A use case for this could be allowing for additional data/context to be included\nwithin the exception that ultimately could be used in a `ART::Events::Exception` listener.","summary":"<p>Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, <code><a href=\"../../Athena/Routing/Exceptions/HTTPException.html\">ART::Exceptions::HTTPException</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/BadRequest","path":"Athena/Routing/Exceptions/BadRequest.html","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/bad_request_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/bad_request_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Conflict","path":"Athena/Routing/Exceptions/Conflict.html","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/conflict_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/conflict_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Forbidden","path":"Athena/Routing/Exceptions/Forbidden.html","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/forbidden_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/forbidden_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Gone","path":"Athena/Routing/Exceptions/Gone.html","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/gone_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/gone_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","path":"Athena/Routing/Exceptions/HTTPException.html","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/http_exception.cr","line_number":14,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/BadRequest","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Conflict","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Forbidden","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Gone","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/LengthRequired","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/MethodNotAllowed","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/NotAcceptable","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/NotFound","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/PreconditionFailed","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/ServiceUnavailable","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/TooManyRequests","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Unauthorized","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/UnsupportedMediaType","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType"}],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":"Represents an HTTP error.\n\nEach child represents a specific HTTP error with the associated status code.\nAlso optionally allows adding headers to the resulting response.\n\nCan be used directly/inherited from to represent non-typical HTTP errors/codes.","summary":"<p>Represents an HTTP error.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status : HTTP::Status, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L26","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status_code* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status_code</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status_code : Int32, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L33","def":{"name":"new","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(HTTP::Status.new(status_code), message, cause, headers)"}}],"instance_methods":[{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L21","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"id":"headers=(headers:HTTP::Headers)-instance-method","html_id":"headers=(headers:HTTP::Headers)-instance-method","name":"headers=","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(headers : HTTP::Headers)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L21","def":{"name":"headers=","args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = headers"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"The `HTTP::Status` associated with `self`.","summary":"<p>The <code>HTTP::Status</code> associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L16","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":"Returns the HTTP status code of `#status`.","summary":"<p>Returns the HTTP status code of <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#status:HTTP::Status-instance-method\">#status</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L38","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@status.value"}},{"id":"to_json(io:IO):Nil-instance-method","html_id":"to_json(io:IO):Nil-instance-method","name":"to_json","doc":"Serializes `self` to JSON in the format of `{\"code\":400,\"message\":\"Exception message\"}`","summary":"<p>Serializes <code>self</code> to JSON in the format of <code>{\"code\":400,\"message\":\"Exception message\"}</code></p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/http_exception.cr#L43","def":{"name":"to_json","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"{code: status_code, message: @message}.to_json(io)"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/LengthRequired","path":"Athena/Routing/Exceptions/LengthRequired.html","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/length_required_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/length_required_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/MethodNotAllowed","path":"Athena/Routing/Exceptions/MethodNotAllowed.html","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/method_not_allowed_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/method_not_allowed_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/NotAcceptable","path":"Athena/Routing/Exceptions/NotAcceptable.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/not_acceptable_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/not_acceptable_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/NotFound","path":"Athena/Routing/Exceptions/NotFound.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/not_found_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/not_found_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/PreconditionFailed","path":"Athena/Routing/Exceptions/PreconditionFailed.html","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/precondition_failed_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/precondition_failed_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/ServiceUnavailable","path":"Athena/Routing/Exceptions/ServiceUnavailable.html","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/service_unavailable_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/service_unavailable_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(retry_after:Number|String|Nil=nil,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(retry_after:Number|String|Nil=nil,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `Retry-After` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(retry_after : Number | String | Nil = <span class=\"n\">nil</span>, message : String? = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/service_unavailable_exception.cr#L7","def":{"name":"new","args":[{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(retry_after, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/TooManyRequests","path":"Athena/Routing/Exceptions/TooManyRequests.html","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/too_many_requests_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/too_many_requests_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(retry_after:Number|String|Nil=nil,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(retry_after:Number|String|Nil=nil,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `Retry-After` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(retry_after : Number | String | Nil = <span class=\"n\">nil</span>, message : String? = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/too_many_requests_exception.cr#L7","def":{"name":"new","args":[{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(retry_after, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/Unauthorized","path":"Athena/Routing/Exceptions/Unauthorized.html","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/unauthorized_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/unauthorized_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(challenge:String,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(challenge:String,message:String?=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIncludes a `WWW-Authenticate` header with the provided *challenge*.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(challenge : String, message : String? = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/unauthorized_exception.cr#L7","def":{"name":"new","args":[{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(challenge, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/UnprocessableEntity","path":"Athena/Routing/Exceptions/UnprocessableEntity.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/unprocessable_entity_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/unprocessable_entity_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/UnsupportedMediaType","path":"Athena/Routing/Exceptions/UnsupportedMediaType.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"github.com/athena-framework/athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"exceptions/unsupported_media_type_exception.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/exceptions/unsupported_media_type_exception.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Define an initializer if the child doesn't implement one on its own\nSee `Athena::Routing::Exceptions::HTTPException#new`.","summary":"<p>Define an initializer if the child doesn't implement one on its own See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Get","path":"Athena/Routing/Get.html","kind":"annotation","full_name":"Athena::Routing::Get","name":"Get","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":16,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a GET endpoint.\n\nA corresponding `HEAD` endpoint is also defined.\n\n## Fields\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n```\n@[ART::Get(path: \"/users/:id\")]\ndef get_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a GET endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners","path":"Athena/Routing/Listeners.html","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"listeners/cors_listener.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr"},{"filename":"athena.cr","line_number":70,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::EventListenerInterface` that act upon `ART::Events` to handle a request.  Custom listeners can also be defined, see `AED::EventListenerInterface`.\n\nSee each listener for more detailed information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> that act upon <code><a href=\"../../Athena/Routing/Events.html\">ART::Events</a></code> to handle a request.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/CORS","path":"Athena/Routing/Listeners/CORS.html","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"listeners/cors_listener.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Handles [Cross-Origin Resource Sharing](https://enable-cors.org) (CORS).\n\nHandles CORS preflight `OPTIONS` requests as well as adding CORS headers to each response.\nSee `ART::Config::CORS` for information on configuring the listener.","summary":"<p>Handles <a href=\"https://enable-cors.org\" target=\"_blank\">Cross-Origin Resource Sharing</a> (CORS).</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr#L21","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 250, ART::Events::Response => 0}"}}],"constructors":[{"id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","html_id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"args_string":"(configuration_resolver : ACF::ConfigurationResolverInterface)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr#L28","def":{"name":"new","args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(configuration_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr#L30","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"request = event.request\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nif request.headers.has_key?(\"origin\")\nelse\n  return\nend\nif (request.method == \"OPTIONS\") && (request.headers.has_key?(\"access-control-request-method\"))\n  set_preflight_response(config, event.request, event.response)\n  return event.finish_request\nend\nif check_origin(config, event.request)\nelse\n  return\nend\nevent.request.attributes[ALLOW_SET_ORIGIN] = true\n"}},{"id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/cors_listener.cr#L52","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if event.request.attributes[ALLOW_SET_ORIGIN]?\nelse\n  return\nend\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nevent.response.headers[\"access-control-allow-origin\"] = event.request.headers[\"origin\"]\nif config.allow_credentials\n  event.response.headers[\"access-control-allow-credentials\"] = \"true\"\nend\nif config.expose_headers.empty?\nelse\n  event.response.headers[\"access-control-expose-headers\"] = config.expose_headers.join(\", \")\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners/Routing","path":"Athena/Routing/Listeners/Routing.html","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"listeners/routing_listener.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/routing_listener.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Sets the related `ART::Route` on the current request using `ART::RouteResolver`.","summary":"<p>Sets the related <code><a href=\"../../../Athena/Routing/Route.html\">ART::Route</a></code> on the current request using <code><a href=\"../../../Athena/Routing/RouteResolver.html\">ART::RouteResolver</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/routing_listener.cr#L12","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 25}"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/routing_listener.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Assigns the resolved `ART::Route` and path parameters to the request.\n\nThe resolved route is dupped to avoid mutating the master copy in the singleton.","summary":"<p>Assigns the resolved <code><a href=\"../../../Athena/Routing/Route.html\">ART::Route</a></code> and path parameters to the request.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/listeners/routing_listener.cr#L21","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"route = ART.route_resolver.resolve(event.request)\nevent.request.route = route.payload.not_nil!.dup\nevent.request.path_params = route.params.not_nil!\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/ParamConverter","path":"Athena/Routing/ParamConverter.html","kind":"annotation","full_name":"Athena::Routing::ParamConverter","name":"ParamConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":91,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Applies an `ART::ParamConverterInterface` to a given parameter.\n\nNOTE: The related action argument's type must be compatible with the converter's return type.\n\nSee `ART::ParamConverterInterface` for more information on defining a param converter.\n\n## Fields\n* param : `String` - The param that should be converted, may also be provided as the first positional argument.\n* converter : `ART::ParamConverterInterface.class` - The `ART::ParamConverterInterface` that should be used to convert this parameter.\n\n## Example\n```\n@[ART::ParamConverter(param: \"user\", converter: DBConverter(User))]\n@[ART::Get(path: \"/users/:id\")]\ndef get_user(user : User) : Nil\nend\n```","summary":"<p>Applies an <code><a href=\"../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code> to a given parameter.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/ParamConverterInterface","path":"Athena/Routing/ParamConverterInterface.html","kind":"module","full_name":"Athena::Routing::ParamConverterInterface(T)","name":"ParamConverterInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"param_converter_interface.cr","line_number":75,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/param_converter_interface.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A param converter allows consuming a `HTTP::Request` to turn a primitive request parameter into a more complex type.\n\nA few common examples could be converting a date-time string into a `Time` object,\nconverting a user's id into an actual `User` object, or deserializing a request body into an instance of T.\n\n### Example\n\n```\n# Create a User object.  This could be an ORM model for example.\nclass User\n  include JSON::Serializable\n\n  property name : String\n  property age : Int32\n\n  def initialize(@name : String, @age : Int32); end\n\n  # Mock an ORM find method\n  def self.find(id : Int64) : self?\n    # Mock the DB query not finding anything if the id != 10\n    id == 10 ? new(\"Jim\", 23) : nil\n  end\nend\n\n# Generics can be used to parameterize the converter, allowing the same logic to be shared, such as for different ORM models.\nstruct DBConverter(T)\n  include ART::ParamConverterInterface(T)\n\n  # :inherit:\n  def convert(request : HTTP::Request) : T\n    # This assumes that a `.find` method is defined on T\n    # Exceptions should be handled here as well, such as type casting errors, or anything else that may happen.  Otherwise they would bubble up and result in a 500.\n    model = T.find request.path_params[\"id\"].to_i64\n    raise ART::Exceptions::NotFound.new \"An item with the provided ID could not be found\" unless model\n    model\n  end\nend\n\n# Using generics is not required, however it is then required to explicitly set the type when including the param converter interface.\nstruct DoubleConverter\n  include ART::ParamConverterInterface(Int32)\n\n  # :inherit:\n  def convert(request : HTTP::Request) : T\n    num = request.path_params[\"num\"]\n    num.to_i * 2\n  rescue ex : ArgumentError\n    raise ART::Exceptions::BadRequest.new \"Invalid Int32: '#{num}'\", cause: ex\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  @[ART::ParamConverter(\"num\", converter: DoubleConverter)]\n  @[ART::Get(path: \"/double/:num\")]\n  def double(num : Int32) : Int32\n    num\n  end\n\n  @[ART::ParamConverter(param: \"user\", converter: DBConverter(User))]\n  @[ART::Get(\"user/:id\")]\n  def get_user(user : User) : User\n    user\n  end\nend\n\nART.run\n\nCLIENT = HTTP::Client.new \"localhost\", 3000\n\nCLIENT.get(\"/double/10\").body  # => 20\nCLIENT.get(\"/double/foo\").body # => {\"code\":400,\"message\":\"Invalid Int32: 'foo'\"}\nCLIENT.get(\"/user/10\").body    # => {\"name\":\"Jim\",\"age\":23}\nCLIENT.get(\"/user/49\").body    # => {\"code\":404,\"message\":\"An item with the provided ID could not be found\"}\n```","summary":"<p>A param converter allows consuming a <code><a href=\"../../HTTP/Request.html\">HTTP::Request</a></code> to turn a primitive request parameter into a more complex type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"convert(request:HTTP::Request):T-instance-method","html_id":"convert(request:HTTP::Request):T-instance-method","name":"convert","doc":"Consumes the *request* and converts it into *T*.","summary":"<p>Consumes the <em>request</em> and converts it into <em>T</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : T","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/param_converter_interface.cr#L77","def":{"name":"convert","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","path":"Athena/Routing/Parameters.html","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"parameters/convertable.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/convertable.cr"},{"filename":"parameters/parameter.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr"},{"filename":"athena.cr","line_number":75,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Namespace for types related to handling route action parameters.\n\nSee `ART::Parameters::Parameter`.","summary":"<p>Namespace for types related to handling route action parameters.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Convertable","path":"Athena/Routing/Parameters/Convertable.html","kind":"module","full_name":"Athena::Routing::Parameters::Convertable(T)","name":"Convertable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"parameters/convertable.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/convertable.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/PathParameter","kind":"struct","full_name":"Athena::Routing::Parameters::PathParameter(T)","name":"PathParameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/QueryParameter","kind":"struct","full_name":"Athena::Routing::Parameters::QueryParameter(T)","name":"QueryParameter"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"Included into a `ART::Parameters::Parameter` to indicate that it supports conversion via a `ART::ParamConverterInterface`.","summary":"<p>Included into a <code><a href=\"../../../Athena/Routing/Parameters/Parameter.html\">ART::Parameters::Parameter</a></code> to indicate that it supports conversion via a <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"converter:Athena::Routing::ParamConverterInterface(T)?-instance-method","html_id":"converter:Athena::Routing::ParamConverterInterface(T)?-instance-method","name":"converter","doc":"The converter that should be applied to `self`.","summary":"<p>The converter that should be applied to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Athena::Routing::ParamConverterInterface(T)?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/convertable.cr#L4","def":{"name":"converter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ParamConverterInterface(T) | ::Nil","visibility":"Public","body":"@converter"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","path":"Athena/Routing/Parameters/Param.html","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"parameters/parameter.cr","line_number":7,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter(T)","name":"Parameter"}],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"Parent type of a parameter just used for typing.\n\nSee `ART::Parameters::Parameter`.","summary":"<p>Parent type of a parameter just used for typing.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"default-instance-method","html_id":"default-instance-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L14","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L8","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L18","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"nilable?-instance-method","html_id":"nilable?-instance-method","name":"nilable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L12","def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"parameter_type-instance-method","html_id":"parameter_type-instance-method","name":"parameter_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L16","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"required?-instance-method","html_id":"required?-instance-method","name":"required?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L10","def":{"name":"required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"type-instance-method","html_id":"type-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L20","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","path":"Athena/Routing/Parameters/Parameter.html","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter(T)","name":"Parameter","abstract":true,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"parameters/parameter.cr","line_number":24,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/PathParameter","kind":"struct","full_name":"Athena::Routing::Parameters::PathParameter(T)","name":"PathParameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/QueryParameter","kind":"struct","full_name":"Athena::Routing::Parameters::QueryParameter(T)","name":"QueryParameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/RequestParameter","kind":"struct","full_name":"Athena::Routing::Parameters::RequestParameter(T)","name":"RequestParameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/ResponseParameter","kind":"struct","full_name":"Athena::Routing::Parameters::ResponseParameter(T)","name":"ResponseParameter"}],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"Base type of a parameter.  Implements logic common to every parameter.","summary":"<p>Base type of a parameter.</p>","class_methods":[],"constructors":[{"id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L36","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Parameter(T).allocate\n_.initialize(name, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:T?-instance-method","html_id":"default:T?-instance-method","name":"default","doc":"The value to use if it was not provided","summary":"<p>The value to use if it was not provided</p>","abstract":false,"args":[],"args_string":" : T?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L31","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@default"}},{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":"Extracts `self` from *request*.","summary":"<p>Extracts <code>self</code> from <em>request</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L39","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the parameter.","summary":"<p>The name of the parameter.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L28","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"nilable?:Bool-instance-method","html_id":"nilable?:Bool-instance-method","name":"nilable?","doc":"If `nil` is a valid value for the parameter.","summary":"<p>If <code>nil</code> is a valid value for the parameter.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L45","def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@type.nilable?"}},{"id":"parameter_type:String-instance-method","html_id":"parameter_type:String-instance-method","name":"parameter_type","doc":"Represents `self`'s type name to use within error handling.","summary":"<p>Represents <code>self</code>'s type name to use within error handling.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L42","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"required?:Bool-instance-method","html_id":"required?:Bool-instance-method","name":"required?","doc":"If the parameter is required.","summary":"<p>If the parameter is required.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L50","def":{"name":"required?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!nilable?"}},{"id":"type:T.class-instance-method","html_id":"type:T.class-instance-method","name":"type","doc":"The type of the parameter, i.e. what the type restriction in the action is.","summary":"<p>The type of the parameter, i.e.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L34","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/PathParameter","path":"Athena/Routing/Parameters/PathParameter.html","kind":"struct","full_name":"Athena::Routing::Parameters::PathParameter(T)","name":"PathParameter","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Convertable","kind":"module","full_name":"Athena::Routing::Parameters::Convertable","name":"Convertable"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"parameters/path_parameter.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/path_parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Convertable","kind":"module","full_name":"Athena::Routing::Parameters::Convertable","name":"Convertable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"Represents a parameter within an action's path such as `id` in the path `\"/user/:id\"`","summary":"<p>Represents a parameter within an action's path such as <code>id</code> in the path <code>\"/user/:id\"</code></p>","class_methods":[],"constructors":[{"id":"new(name:String,converter:Athena::Routing::ParamConverterInterface(T)?=nil,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,converter:Athena::Routing::ParamConverterInterface(T)?=nil,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"ART::ParamConverterInterface(T) | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, converter : Athena::Routing::ParamConverterInterface(T)? = <span class=\"n\">nil</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/path_parameter.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"ART::ParamConverterInterface(T) | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PathParameter(T).allocate\n_.initialize(name, converter, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":"Extracts `self` from *request*.","summary":"<p>Extracts <code>self</code> from <em>request</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/path_parameter.cr#L10","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"request.path_params[@name]?"}},{"id":"parameter_type:String-instance-method","html_id":"parameter_type:String-instance-method","name":"parameter_type","doc":"Represents `self`'s type name to use within error handling.","summary":"<p>Represents <code>self</code>'s type name to use within error handling.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/path_parameter.cr#L15","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"path\""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/QueryParameter","path":"Athena/Routing/Parameters/QueryParameter.html","kind":"struct","full_name":"Athena::Routing::Parameters::QueryParameter(T)","name":"QueryParameter","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Convertable","kind":"module","full_name":"Athena::Routing::Parameters::Convertable","name":"Convertable"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"parameters/query_parameter.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/query_parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Convertable","kind":"module","full_name":"Athena::Routing::Parameters::Convertable","name":"Convertable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"Represents a query parameter defined from an `ART::QueryParam` annotation.","summary":"<p>Represents a query parameter defined from an <code><a href=\"../../../Athena/Routing/QueryParam.html\">ART::QueryParam</a></code> annotation.</p>","class_methods":[],"constructors":[{"id":"new(name:String,converter:Athena::Routing::ParamConverterInterface(T)?=nil,pattern:Regex?=nil,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,converter:Athena::Routing::ParamConverterInterface(T)?=nil,pattern:Regex?=nil,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"ART::ParamConverterInterface(T) | ::Nil"},{"name":"pattern","doc":null,"default_value":"nil","external_name":"pattern","restriction":"Regex | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, converter : Athena::Routing::ParamConverterInterface(T)? = <span class=\"n\">nil</span>, pattern : Regex? = <span class=\"n\">nil</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/query_parameter.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"ART::ParamConverterInterface(T) | ::Nil"},{"name":"pattern","doc":null,"default_value":"nil","external_name":"pattern","restriction":"Regex | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = QueryParameter(T).allocate\n_.initialize(name, converter, pattern, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":"Extracts `self` from *request*.","summary":"<p>Extracts <code>self</code> from <em>request</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/query_parameter.cr#L10","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"value = request.query_params[@name]?\nif ((!value.nil?) && (ptn = @pattern)) && (!(value =~ ptn))\n  raise(ART::Exceptions::UnprocessableEntity.new(\"Expected #{parameter_type} parameter '#{@name}' to match '#{ptn}' but got '#{value}'\"))\nend\nvalue\n"}},{"id":"parameter_type:String-instance-method","html_id":"parameter_type:String-instance-method","name":"parameter_type","doc":"Represents `self`'s type name to use within error handling.","summary":"<p>Represents <code>self</code>'s type name to use within error handling.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/query_parameter.cr#L19","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"query\""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/RequestParameter","path":"Athena/Routing/Parameters/RequestParameter.html","kind":"struct","full_name":"Athena::Routing::Parameters::RequestParameter(T)","name":"RequestParameter","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"parameters/request_parameter.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/request_parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"A special parameter that represents a `HTTP::Request` typed controller action argument.","summary":"<p>A special parameter that represents a <code><a href=\"../../../HTTP/Request.html\">HTTP::Request</a></code> typed controller action argument.</p>","class_methods":[],"constructors":[{"id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L36","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = RequestParameter(T).allocate\n_.initialize(name, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":"Extracts `self` from *request*.","summary":"<p>Extracts <code>self</code> from <em>request</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/request_parameter.cr#L3","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"parameter_type:String-instance-method","html_id":"parameter_type:String-instance-method","name":"parameter_type","doc":"Represents `self`'s type name to use within error handling.","summary":"<p>Represents <code>self</code>'s type name to use within error handling.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/request_parameter.cr#L7","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"request\""}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/ResponseParameter","path":"Athena/Routing/Parameters/ResponseParameter.html","kind":"struct","full_name":"Athena::Routing::Parameters::ResponseParameter(T)","name":"ResponseParameter","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Parameter","kind":"struct","full_name":"Athena::Routing::Parameters::Parameter","name":"Parameter"},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters/Param","kind":"module","full_name":"Athena::Routing::Parameters::Param","name":"Param"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"parameters/response_parameter.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/response_parameter.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Parameters","kind":"module","full_name":"Athena::Routing::Parameters","name":"Parameters"},"doc":"A special parameter that represents a `HTTP::Server::Response` typed controller action argument.","summary":"<p>A special parameter that represents a <code>HTTP::Server::Response</code> typed controller action argument.</p>","class_methods":[],"constructors":[{"id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/parameter.cr#L36","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ResponseParameter(T).allocate\n_.initialize(name, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"extract(request:HTTP::Request):String?-instance-method","html_id":"extract(request:HTTP::Request):String?-instance-method","name":"extract","doc":"Extracts `self` from *request*.","summary":"<p>Extracts <code>self</code> from <em>request</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : String?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/response_parameter.cr#L3","def":{"name":"extract","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"parameter_type:String-instance-method","html_id":"parameter_type:String-instance-method","name":"parameter_type","doc":"Represents `self`'s type name to use within error handling.","summary":"<p>Represents <code>self</code>'s type name to use within error handling.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/parameters/response_parameter.cr#L7","def":{"name":"parameter_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"response\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Patch","path":"Athena/Routing/Patch.html","kind":"annotation","full_name":"Athena::Routing::Patch","name":"Patch","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":58,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a PATCH endpoint.\n\n## Fields\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n```\n@[ART::Patch(path: \"/users/:id\")]\ndef partial_update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a PATCH endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Post","path":"Athena/Routing/Post.html","kind":"annotation","full_name":"Athena::Routing::Post","name":"Post","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":30,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a POST endpoint.\n\n## Fields\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n```\n@[ART::Post(path: \"/users\")]\ndef new_user : Nil\nend\n```","summary":"<p>Defines a POST endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Prefix","path":"Athena/Routing/Prefix.html","kind":"annotation","full_name":"Athena::Routing::Prefix","name":"Prefix","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":127,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Apply a *prefix* to all actions within `self`.\n\n## Example\n```\n@[ART::Prefix(\"calendar\")] # It can also use a named argument `@[ART::Prefix(prefix: \"calendar\")]\nclass CalendarController < ART::Controller\n  # The route of this action would be `GET /calendar/events`\n  @[ART::Get(path: \"events\")]\n  def events : String\n    \"events\"\n  end\nend\n```","summary":"<p>Apply a <em>prefix</em> to all actions within <code>self</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Put","path":"Athena/Routing/Put.html","kind":"annotation","full_name":"Athena::Routing::Put","name":"Put","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":44,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a PUT endpoint.\n\n## Fields\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n```\n@[ART::Put(path: \"/users/:id\")]\ndef update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a PUT endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/QueryParam","path":"Athena/Routing/QueryParam.html","kind":"annotation","full_name":"Athena::Routing::QueryParam","name":"QueryParam","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"annotations.cr","line_number":112,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/annotations.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `ART::Parameters::QueryParameter` tied to a given route.\n\nThe type of the query param is derived from the type restriction of the associated controller action argument.\n\nA non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\nA nilable type denotes it as optional.  If the parameter is not supplied (or could not be converted), and no default value is assigned, it is `nil`.\n\n## Fields\n* name : `String` - The name of the query parameter, may also be provided as the first positional argument.\n* constraints : `Regex` - A pattern the query pram must match to be considered valid.\n* converter : `ART::ParamConverterInterface.class` - The `ART::ParamConverterInterface` that should be used to convert this parameter.\n\n## Example\n```\n@[ART::QueryParam(name: \"value\")]\n@[ART::Get(path: \"/example\")]\ndef get_user(name : String) : Nil\nend\n```","summary":"<p>Defines a <code><a href=\"../../Athena/Routing/Parameters/QueryParameter.html\">ART::Parameters::QueryParameter</a></code> tied to a given route.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/RequestStore","path":"Athena/Routing/RequestStore.html","kind":"class","full_name":"Athena::Routing::RequestStore","name":"RequestStore","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"request_store.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/request_store.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Service","kind":"module","full_name":"Athena::DI::Service","name":"Service"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Stores the current `HTTP::Request` object.\n\nCan be injected to access the request from a non controller context.","summary":"<p>Stores the current <code><a href=\"../../HTTP/Request.html\">HTTP::Request</a></code> object.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":"Returns the currently executing request.\n\nUse `#request?` if it's possible there is no request.","summary":"<p>Returns the currently executing request.</p>","abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/request_store.cr#L20","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"@request.not_nil!"}},{"id":"request=(request:HTTP::Request)-instance-method","html_id":"request=(request:HTTP::Request)-instance-method","name":"request=","doc":"Sets the currently executing request.","summary":"<p>Sets the currently executing request.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/request_store.cr#L30","def":{"name":"request=","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request = request"}},{"id":"request?:HTTP::Request?-instance-method","html_id":"request?:HTTP::Request?-instance-method","name":"request?","doc":"Returns the currently executing request if it exists, otherwise `nil`.","summary":"<p>Returns the currently executing request if it exists, otherwise <code>nil</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Request?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/request_store.cr#L25","def":{"name":"request?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request | ::Nil","visibility":"Public","body":"@request"}},{"id":"reset:Nil-instance-method","html_id":"reset:Nil-instance-method","name":"reset","doc":"Resets the store, removing the reference to the request.\n\nUsed internally after the request has been returned.","summary":"<p>Resets the store, removing the reference to the request.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/request_store.cr#L13","def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@request = nil"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/Route","path":"Athena/Routing/Route.html","kind":"class","full_name":"Athena::Routing::Route(Controller, ActionType, ReturnType, *ArgTypes)","name":"Route","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Athena/Routing/Action","kind":"class","full_name":"Athena::Routing::Action","name":"Action"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/Routing/Action","kind":"class","full_name":"Athena::Routing::Action","name":"Action"},{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"athena.cr","line_number":87,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an endpoint within the application.\n\nIncludes metadata about the endpoint, such as the controller its on,\nthe parameters it accepts, its return type, and the action should be executed\nto handle the request.","summary":"<p>Represents an endpoint within the application.</p>","class_methods":[],"constructors":[{"id":"new(action:ActionType,parameters:Array(ART::Parameters::Param)=[]ofART::Parameters::Param)-class-method","html_id":"new(action:ActionType,parameters:Array(ART::Parameters::Param)=[]ofART::Parameters::Param)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"parameters","doc":null,"default_value":"[] of ART::Parameters::Param","external_name":"parameters","restriction":"Array(ART::Parameters::Param)"}],"args_string":"(action : ActionType, parameters : Array(ART::Parameters::Param) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">Parameters</span><span class=\"t\">::</span><span class=\"t\">Param</span>)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L108","def":{"name":"new","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"parameters","doc":null,"default_value":"[] of ART::Parameters::Param","external_name":"parameters","restriction":"Array(ART::Parameters::Param)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Route(Controller, ActionType, ReturnType, *ArgTypes).allocate\n_.initialize(action, parameters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"action:ActionType-instance-method","html_id":"action:ActionType-instance-method","name":"action","doc":"A `Proc(Proc)` representing the controller action that handles the `HTTP::Request` on `self`.\n\nThe outer proc instantiates the controller instance and creates a proc with the action.\nThis ensures each request gets its own instance of the controller to prevent leaking state.","summary":"<p>A <code>Proc(Proc)</code> representing the controller action that handles the <code><a href=\"../../HTTP/Request.html\">HTTP::Request</a></code> on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ActionType","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L95","def":{"name":"action","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ActionType","visibility":"Public","body":"@action"}},{"id":"arguments:ArgTypes?-instance-method","html_id":"arguments:ArgTypes?-instance-method","name":"arguments","doc":"The arguments that will be passed the `#action`.","summary":"<p>The arguments that will be passed the <code><a href=\"../../Athena/Routing/Route.html#action:ActionType-instance-method\">#action</a></code>.</p>","abstract":false,"args":[],"args_string":" : ArgTypes?","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L98","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ArgTypes | ::Nil","visibility":"Public","body":"@arguments"}},{"id":"controller:ART::Controller.class-instance-method","html_id":"controller:ART::Controller.class-instance-method","name":"controller","doc":"The `ART::Controller` that handles `self` by default.","summary":"<p>The <code><a href=\"../../Athena/Routing/Controller.html\">ART::Controller</a></code> that handles <code>self</code> by default.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">Controller</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L89","def":{"name":"controller","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Controller.class","visibility":"Public","body":"@controller"}},{"id":"execute:ReturnType-instance-method","html_id":"execute:ReturnType-instance-method","name":"execute","doc":"Executes `#action` with the given `#arguments`.","summary":"<p>Executes <code><a href=\"../../Athena/Routing/Route.html#action:ActionType-instance-method\">#action</a></code> with the given <code><a href=\"../../Athena/Routing/Route.html#arguments:ArgTypes?-instance-method\">#arguments</a></code>.</p>","abstract":false,"args":[],"args_string":" : ReturnType","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L124","def":{"name":"execute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType","visibility":"Public","body":"{% if ArgTypes.size > 0 %}\n        @action.call.call *@arguments.not_nil!\n      {% else %}\n        @action.call.call\n      {% end %}"}},{"id":"parameters:Array(ART::Parameters::Param)-instance-method","html_id":"parameters:Array(ART::Parameters::Param)-instance-method","name":"parameters","doc":"The parameters that need to be parsed from the request\n\nIncludes route, body, and query params","summary":"<p>The parameters that need to be parsed from the request</p>","abstract":false,"args":[],"args_string":" : Array(ART::Parameters::Param)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L103","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ART::Parameters::Param)","visibility":"Public","body":"@parameters"}},{"id":"return_type:ReturnType.class-instance-method","html_id":"return_type:ReturnType.class-instance-method","name":"return_type","doc":"The return type of the action.","summary":"<p>The return type of the action.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ReturnType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/athena.cr#L106","def":{"name":"return_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType.class","visibility":"Public","body":"@return_type"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/RouteHandler","path":"Athena/Routing/RouteHandler.html","kind":"struct","full_name":"Athena::Routing::RouteHandler","name":"RouteHandler","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Injectable","kind":"module","full_name":"Athena::DI::Injectable","name":"Injectable"},{"html_id":"github.com/athena-framework/athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/athena-framework/athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"route_handler.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_handler.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/athena-framework/athena/Athena/DI/Injectable","kind":"module","full_name":"Athena::DI::Injectable","name":"Injectable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The entry-point into `Athena::Routing`.\n\nEmits events that handle a given request.","summary":"<p>The entry-point into <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::ArgumentResolver)-class-method","html_id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::ArgumentResolver)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::ArgumentResolver"}],"args_string":"(event_dispatcher : AED::EventDispatcherInterface, request_store : ART::RequestStore, argument_resolver : ART::ArgumentResolver)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_handler.cr#L7","def":{"name":"new","args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::ArgumentResolver"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event_dispatcher, request_store, argument_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(**args)-class-method","html_id":"new(**args)-class-method","name":"new","doc":"Auto generated via `ADI::Injectable` module.","summary":"<p>Auto generated via <code><a href=\"../../Athena/DI/Injectable.html\">ADI::Injectable</a></code> module.</p>","abstract":false,"args":[],"args_string":"(**args)","source_link":null,"def":{"name":"new","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(event_dispatcher: args[:event_dispatcher]? || (Athena::DI.container.resolve(AED::EventDispatcherInterface, \"event_dispatcher\")), request_store: args[:request_store]? || (Athena::DI.container.resolve(ART::RequestStore, \"request_store\")), argument_resolver: args[:argument_resolver]? || (Athena::DI.container.resolve(ART::ArgumentResolver, \"argument_resolver\")))"}}],"instance_methods":[{"id":"handle(ctx:HTTP::Server::Context):Nil-instance-method","html_id":"handle(ctx:HTTP::Server::Context):Nil-instance-method","name":"handle","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"HTTP::Server::Context"}],"args_string":"(ctx : HTTP::Server::Context) : Nil","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_handler.cr#L14","def":{"name":"handle","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"HTTP::Server::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  handle_raw(ctx)\nrescue ex : ::Exception\n  event = ART::Events::Exception.new(ctx.request, ex)\n  @event_dispatcher.dispatch(event)\n  exception = event.exception\n  response = ctx.response\n  response.content_type = \"application/json\"\n  if exception.is_a?(ART::Exceptions::HTTPException)\n    response.headers.merge!(exception.headers)\n    response.status = exception.status\n  else\n    response.status = :internal_server_error\n  end\n  exception.to_json(ctx.response)\n  response.close\n  if (Athena.environment == \"development\") && response.status.internal_server_error?\n    raise(exception)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/athena-framework/athena/Athena/Routing/RouteResolver","path":"Athena/Routing/RouteResolver.html","kind":"class","full_name":"Athena::Routing::RouteResolver","name":"RouteResolver","abstract":false,"superclass":{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/athena-framework/athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/athena-framework/athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"route_resolver.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_resolver.cr"}],"repository_name":"github.com/athena-framework/athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/athena-framework/athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Registers a `ART::Route` for each action with the router.  This type is a singleton as opposed to a service to prevent all the routes from having to be redefined on each request.","summary":"<p>Registers a <code><a href=\"../../Athena/Routing/Route.html\">ART::Route</a></code> for each action with the router.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_resolver.cr#L5","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::Action)-instance-method","html_id":"resolve(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::Action)-instance-method","name":"resolve","doc":"Attempts to resolve the *request* into an `Amber::Router::RoutedResult(Athena::Routing::Action)`.\n\nRaises an `ART::Exceptions::NotFound` exception if a corresponding `ART::Route` could not be resolved.","summary":"<p>Attempts to resolve the <em>request</em> into an <code>Amber::Router::RoutedResult(<a href=\"../../Athena/Routing/Action.html\">Athena::Routing::Action</a>)</code>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : Amber::Router::RoutedResult(Athena::Routing::Action)","source_link":"https://github.com/athena-framework/athena/blob/57e73a001fbae701da8f21a29c83045cb8b23bc7/src/route_resolver.cr#L138","def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Amber::Router::RoutedResult(Athena::Routing::Action)","visibility":"Public","body":"route = @routes.find(\"/#{request.method}#{request.path}\")\nif route.found?\nelse\n  raise(ART::Exceptions::NotFound.new(\"No route found for '#{request.method} #{request.path}'\"))\nend\nroute\n"}}],"macros":[],"types":[]}]}]}]}}